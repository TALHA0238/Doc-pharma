// ignore_for_file: use_key_in_widget_constructors

import 'package:flutter/material.dart';

import 'chat_screen.dart';
import 'diapredict_screen.dart';
import 'docconsult_screen.dart';
import 'healthDietPlan_screen.dart';
import 'login_screen.dart';
import 'pharmacies_screen.dart';
import 'profile_screen.dart';
import 'record_screen.dart';
import 'signup_screen.dart';
import 'tech_screen.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({Key? key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue[200],
      appBar: AppBar(
        title: const Text('Home'),
        actions: [
          PopupMenuButton<String>(
            onSelected: (value) {
              if (value == 'profile') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ProfileScreen(
                      userName: 'John Doe',
                      displayPicture: 'URL_TO_DISPLAY_PICTURE',
                      dob: '01/01/1990',
                      joinedDate: '01/01/2022',
                      history: 'Patient history',
                      userType: 'Patient',
                      address: '123 Main St',
                    ),
                  ),
                );
              } else if (value == 'login') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const LoginScreen()),
                );
              } else if (value == 'signup') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const SignupScreen()),
                );
              }
            },
            itemBuilder: (BuildContext context) => [
              const PopupMenuItem<String>(
                value: 'profile',
                child: Text('Profile'),
              ),
              const PopupMenuItem<String>(
                value: 'login',
                child: Text('Login'),
              ),
              const PopupMenuItem<String>(
                value: 'signup',
                child: Text('Sign Up'),
              ),
              const PopupMenuItem<String>(
                value: 'settings',
                child: Text('Settings'),
              ),
            ],
          ),
        ],
      ),
      body: ListView(
        padding: const EdgeInsets.all(8.0),
        children: [
          _buildDoctorBox(
            context,
            'Endocrinologist',
            'images/ee.jpg',
            'Dr. Muhammad Talha',
            'Specialization: Endocrinology\nExperience: 10 years',
          ),
          _buildNewsBox(context, 'A chronic condition in which the pancreas produce little or no insulin by itself.', Icons.new_releases),
          _buildRecordHistoryBox(context, 'Record History Here', Icons.history),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Expanded(
                child: _buildFeatureBox(
                  context,
                  'Prediction',
                  () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const DiapredictScreen()),
                    );
                  },
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildFeatureBox(
                  context,
                  'Consultation',
                  () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const DocconsultScreen()),
                    );
                  },
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Expanded(
                child: _buildFeatureBox(
                  context,
                  'Record store',
                  () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const RecordScreen()),
                    );
                  },
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildFeatureBox(
                  context,
                  'News',
                  () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const TechScreen()),
                    );
                  },
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              _buildIconButtonWithLabel(Icons.home, 'Home', () {
              
              }),
              _buildIconButtonWithLabel(Icons.favorite, 'Favorite', () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const HealthDietPlanScreen()),
                );
              }),
              _buildIconButtonWithLabel(Icons.local_hospital, 'Pharmacies', () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const PharmaciesScreen()),
                );
              }),
              _buildIconButtonWithLabel(Icons.chat, 'Forum', () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const ChatScreen()),
                );
              }),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildDoctorBox(BuildContext context, String boxTitle, String imagePath, String doctorName, String doctorBio) {
    return Container(
      width: double.infinity,
      height: 100,
      margin: const EdgeInsets.all(8),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.7),
        borderRadius: BorderRadius.circular(10),
      ),
      child: Row(
        children: [
          CircleAvatar(
            radius: 30,
            backgroundImage: AssetImage(imagePath),
          ),
          const SizedBox(width: 8),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Text(
                  doctorName,
                  style: const TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                ),
                const SizedBox(height: 4),
                Text(
                  doctorBio,
                  style: const TextStyle(
                    fontSize: 12,
                    color: Colors.black,
                  ),
                  textAlign: TextAlign.start,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildNewsBox(BuildContext context, String newsContent, IconData icon) {
    return Container(
      width: double.infinity,
      height: 100,
      margin: const EdgeInsets.all(8),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.7),
        borderRadius: BorderRadius.circular(10),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(icon, color: Colors.black),
          const SizedBox(width: 16),
          Expanded(
            child: Text(
              newsContent,
              style: const TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.bold,
                color: Colors.black,
              ),
              textAlign: TextAlign.center,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildRecordHistoryBox(BuildContext context, String recordContent, IconData icon) {
    return Container(
      width: double.infinity,
      margin: const EdgeInsets.all(8),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.7),
        borderRadius: BorderRadius.circular(10),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Icon(icon, color: Colors.black),
                Text(
                  recordContent,
                  style: const TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                ),
                const Text('View All', style: TextStyle(color: Colors.blue)),
              ],
            ),
          ),
          const ListTile(
            leading: Icon(Icons.star, color: Colors.yellow),
            title: Text('Record 1'),
            subtitle: Text('Details of Record 1'),
          ),
          const ListTile(
            leading: Icon(Icons.star, color: Colors.yellow),
            title: Text('Record 2'),
            subtitle: Text('Details of Record 2'),
          ),
        ],
      ),
    );
  }

  Widget _buildFeatureBox(BuildContext context, String featureName, VoidCallback onPressed) {
    return Container(
      width: MediaQuery.of(context).size.width * 0.45,
      height: 80,
      margin: const EdgeInsets.symmetric(horizontal: 8),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.7),
        borderRadius: BorderRadius.circular(10),
      ),
      child: InkWell(
        onTap: onPressed,
        child: Center(
          child: Text(
            featureName,
            style: const TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.bold,
              color: Colors.black,
            ),
            textAlign: TextAlign.center,
          ),
        ),
      ),
    );
  }

  Widget _buildIconButtonWithLabel(IconData iconData, String label, VoidCallback onPressed) {
    return Column(
      children: [
        IconButton(
          icon: Icon(iconData),
          onPressed: onPressed,
          color: Colors.black,
        ),
        Text(
          label,
          style: const TextStyle(color: Colors.black),
        ),
      ],
    );
  }
}

void main() {
  runApp(
    MaterialApp(
      title: 'HomeScreen Demo',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const HomeScreen(),
    ),
  );
}
